name: Build ./duvrc.sh Cache Image
on:
  schedule:
    # 2:00 AM US-Pacific on Wednesdays
    - cron: '0 9 * * 3'
  workflow_dispatch:
defaults:
  run:
    shell: bash
env:
  SCIENCE_AUTH_API_GITHUB_COM_BEARER: ${{ secrets.GITHUB_TOKEN }}
jobs:
  org-check:
    name: Check GitHub Organization
    if: ${{ github.repository_owner == 'pex-tool' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Noop
        if: false
        run: |
          echo "This is a dummy step that will never run."
  setup-matrix:
    runs-on: ubuntu-24.04
    needs: org-check
    steps:
      - name: Checkout Pex
        uses: actions/checkout@v4
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Setup matrix combinations
        id: setup-test-cmds
        run: |
          echo test-cmds="$(
            uv -q run dev-cmd -q build-cache-image -- --list-test-cmds | \
              jq -R . | jq -src .
          )" >> "$GITHUB_OUTPUT"
    outputs:
      test-cmds: ${{ steps.setup-test-cmds.outputs.test-cmds }}
  build-cache-images:
    name: Build ./duvrc.sh Cache for ${{ matrix.test-cmd }}
    needs: setup-matrix
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        test-cmd: ${{ fromJson(needs.setup-matrix.outputs.test-cmds) }}
    steps:
      - name: Checkout Pex
        uses: actions/checkout@v4
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Build & Export Cache Image for ${{ matrix.test-cmd }}
        run: |
          uv run dev-cmd build-cache-image -- \
            --color \
            --build-style build \
            --dist-dir export \
            --post-action export \
            --test-cmd ${{ matrix.test-cmd }}
      - uses: actions/upload-artifact@v4
        with:
          path: |
            export/*.tar
            .gitignore
          name: 'cache-${{ matrix.test-cmd }}'
  build-cache-image:
    name: Merge and push unified ./duvrc.sh Cache Image
    runs-on: ubuntu-24.04
    needs: build-cache-images
    steps:
      - name: Checkout Pex
        uses: actions/checkout@v4
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Merge & Push Cache Image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
            docker login ghcr.io -u ${{ github.actor }} --password-stdin

          uv run dev-cmd build-cache-image -- \
            --color \
            --build-style merge \
            --dist-dir export \
            --post-action push
