[metadata]
name = pex
version = attr: pex.version.__version__
author = The PEX developers
author_email = developers@pex-tool.org
description = The PEX packaging toolchain.
long_description = file: README.rst
keywords = package, executable, virtualenv, lock, freeze
url = https://github.com/pex-tool/pex
license_file = LICENSE
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Operating System :: Unix
    Operating System :: POSIX :: Linux
    Operating System :: MacOS :: MacOS X
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Programming Language :: Python :: 3.13
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Software Development :: Build Tools
    Topic :: System :: Archiving :: Packaging
    Topic :: System :: Software Distribution
    Topic :: Utilities

[options]
zip_safe = False
include_package_data = False
packages = find:
python_requires = >=2.7,<3.14,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*

[options.entry_points]
console_scripts =
    pex = pex.bin.pex:main
    pex3 = pex.cli.pex:main
    pex-tools = pex.tools.main:main

distutils.commands =
    bdist_pex = pex.distutils.commands.bdist_pex:bdist_pex

[options.extras_require]
# For improved subprocess robustness under python2.7.
subprocess =
    subprocess32>=3.2.7; python_version < "3"
management =
    # N.B.: Released on 2017-09-01 and added support for the `process_iter(attrs, ad_value)` API we
    # use in `pex.cache.access`.
    psutil>=5.3

[options.packages.find]
include =
    pex
    pex.*

# We use `[options] include_package_data = False` above and manually include package data here to
# avoid picking up `pex.egg-info/*` temporary build metadata in the final sdist, which leads to
# non-reproducible builds and resulting test failures. When using
# `[options] include_package_data = True`, older setuptools (python 2.7, 3.5 and 3.6 are affected)
# demands the build dirs we pass in `setup.py` be relative instead of absolute, but this comes with
# no way to turn off inclusion of the `pex.egg-info/*` which then is in-tree with the `pex` package
# source root. The relative path restriction in old setuptools is lifted though when
# `[options] include_package_data = False` at the cost of manually needing to specify package data
# includes here. An important detail in specifying those includes is that `**` syntax supported by
# newer setuptools also cannot be used (it does not cause an error, but also does not pick up the
# right files when building the sdist). As a result we use a clunkier, more manual, set of include
# patterns here than we would otherwise need if we could leverage `**` support.
[options.package_data]
* =
    .layout.json
    .prefix/bin/*
    *
    *.dist-info/*

[options.exclude_package_data]
* =
    *.pyc
    *.pyo

[bdist_wheel]
python_tag=py2.py3
